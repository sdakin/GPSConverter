<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   backgroundColor="#CCCCCC" fontSize="16" fontWeight="bold">
	<s:layout>
		<s:VerticalLayout paddingLeft="10" paddingTop="10" horizontalAlign="center"/>
	</s:layout>
	<fx:Declarations>
		<s:HTTPService id="hsSaveData" url="http://qmate.com/apps/gps/saveData.php" method="PUT" 
					   result="handleSaveDataResult(event)" resultFormat="text" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.sdakin.gps.GPSCoordinate;
			import com.sdakin.gps.GPSParser;
			
			import mx.containers.Panel;
			import mx.core.UIComponent;
			import mx.managers.PopUpManager;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.PopUpAnchor;
			
			public function handleConvert(event:Event):void {
				if (txtInputCoord.text && txtInputCoord.text.length > 0) {
					var parser:GPSParser = new GPSParser();
					var coord:GPSCoordinate = parser.parseGPSCoordinate(txtInputCoord.text);
					txtDMS.text = coord.toString(GPSCoordinate.FORMAT_DMS);
					txtDegDecMin.text = coord.toString(GPSCoordinate.FORMAT_DECMIN);
					txtDecDeg.text = coord.toString(GPSCoordinate.FORMAT_DECDEG);
	//				saveData();
				}
			}
			
			public function handleCopyDMS(event:Event):void {
				System.setClipboard(txtDMS.text);
				Button(event.target).label = "Copied";
				var resetButtons:Timer = new Timer(2500, 1);
				resetButtons.addEventListener(TimerEvent.TIMER, handleResetButtons);
				resetButtons.start();
			}
			
			public function handleCopyDegDecMin(event:Event):void {
				System.setClipboard(txtDegDecMin.text);
				Button(event.target).label = "Copied";
				var resetButtons:Timer = new Timer(2500, 1);
				resetButtons.addEventListener(TimerEvent.TIMER, handleResetButtons);
				resetButtons.start();
			}
			
			public function handleCopyDecDeg(event:Event):void {
				System.setClipboard(txtDecDeg.text);
				Button(event.target).label = "Copied";
				var resetButtons:Timer = new Timer(2500, 1);
				resetButtons.addEventListener(TimerEvent.TIMER, handleResetButtons);
				resetButtons.start();
			}
			
			public function handleResetButtons(event:TimerEvent):void {
				btnCopyDMS.label = "Copy";
				btnCopyDegDecMin.label = "Copy";
				btnCopyDecDeg.label = "Copy";
			}
			
			protected function handleSaveDataResult(result:ResultEvent):void {
				var pause:int = 0;
			}
			
			protected function jsonEscape(input:String):String {
				return input.replace(/\"/g, "\\\"");
			}
			
			protected function saveData():void {
				var data:String = "{ \"input\":\"" + jsonEscape(txtInputCoord.text) + "\",\"dms\":\"" + 
					jsonEscape(txtDMS.text) + "\",\"decmin\":\"" + jsonEscape(txtDegDecMin.text) +
					"\",\"decdeg\":\"" + jsonEscape(txtDecDeg.text) + "\"}";
				hsSaveData.send(data);
			}
			
			protected function handleExportToVcard(event:Event):void {
				var vcardOptions:VcardOptions = new VcardOptions();
				PopUpManager.addPopUp(vcardOptions, this, true);
				PopUpManager.centerPopUp(vcardOptions);
				vcardOptions.gpsCoordStr = txtInputCoord.text;
			}
			
			protected function handleGpxToVcard(event:Event):void {
				var gpxFile:FileReference = new FileReference();
				var fileFilter:FileFilter = new FileFilter("GPX Files", "*.gpx");
				var parent:DisplayObject = this;
				
				gpxFile.browse([fileFilter]);
				gpxFile.addEventListener(Event.SELECT, onGpxFileSelected);
				
				function onGpxFileSelected(event:Event):void {
					gpxFile.addEventListener(Event.COMPLETE, onLoadComplete);
					gpxFile.load();
				}
				
				function getAdrString(input:String):String {
					var result:String = input.replace(/[\r\n]+/g, ", ");
					return result;
				}
				
				function getGeoString(lat:String, long:String):String {
					var result:String;
					var parser:GPSParser = new GPSParser();
					var coord:GPSCoordinate = parser.parseGPSCoordinate(lat + "," + long);
					result = coord.toString(GPSCoordinate.FORMAT_DECDEG).replace(/[ ]+/g, ";");
					return result;
				}
				
				function onLoadComplete(event:Event):void {
					var vcardStr:String = "";
					gpxFile.data.position = 0;
					var gpx:XML = new XML(gpxFile.data.toString());
					var ns:Namespace = gpx.namespace();
					var waypoints:XMLList = gpx.ns::["wpt"];
					for each (var wpt:XML in waypoints)
					{
						vcardStr += "BEGIN:VCARD\nVERSION:3.0\n";
						vcardStr += "FN:" + wpt.ns::["name"] + "\n";
						vcardStr += "ADR:" + getAdrString(wpt.ns::["cmt"]) + "\n";
						vcardStr += "GEO:" + getGeoString(wpt.@lat, wpt.@lon) + "\n";
						vcardStr += "END:VCARD\n";
					}
					var vcardResults:VcardResults = new VcardResults();
					vcardResults.vcardString = vcardStr;
					PopUpManager.addPopUp(vcardResults, parent, true);
					PopUpManager.centerPopUp(vcardResults);
				}
			}
		]]>
	</fx:Script>
	<s:Spacer width="10" height="37"/>
	
	<s:VGroup>
		<mx:Grid>
			<mx:GridRow>
				<mx:GridItem>
					<s:Label height="100%" text="GPS Coordinates to convert" verticalAlign="middle"/>
				</mx:GridItem>
				<mx:GridItem>
					<s:TextInput id="txtInputCoord" width="300" height="100%"/>
				</mx:GridItem>
				<mx:GridItem />
			</mx:GridRow>
			<mx:GridRow paddingBottom="5" paddingTop="5">
				<mx:GridItem />
				<mx:GridItem textAlign="left">
					<mx:HBox width="100%" horizontalAlign="center">
						<s:Button label="Convert" height="30" click="handleConvert(event)"/>
					</mx:HBox>
				</mx:GridItem>
				<mx:GridItem />
			</mx:GridRow>
			<mx:GridRow>
				<mx:GridItem>
					<s:Label width="100%" height="100%" text="Degrees/Minutes/Seconds" textAlign="right"
							 verticalAlign="middle"/>
				</mx:GridItem>
				<mx:GridItem>
					<s:TextInput id="txtDMS" width="300" height="100%" contentBackgroundColor="#E9E9E9"
								 editable="false"/>
				</mx:GridItem>
				<mx:GridItem>
					<mx:HBox>
						<s:Button id="btnCopyDMS" label="Copy" height="24" click="handleCopyDMS(event)" fontSize="14"/>
						<mx:Image height="24" source="./images/google.png"/>
						<mx:Spacer width="10"/>
					</mx:HBox>
				</mx:GridItem>
			</mx:GridRow>
			<mx:GridRow>
				<mx:GridItem>
					<s:Label width="100%" height="100%" text="Degrees/Decimal Minutes" textAlign="right"
							 verticalAlign="middle"/>
				</mx:GridItem>
				<mx:GridItem>
					<s:TextInput id="txtDegDecMin" width="300" height="100%" contentBackgroundColor="#E9E9E9"
								 editable="false"/>
				</mx:GridItem>
				<mx:GridItem>
					<mx:HBox>
						<s:Button id="btnCopyDegDecMin" label="Copy" height="24" click="handleCopyDegDecMin(event)" fontSize="14"/>
						<mx:Image height="24" source="./images/garmin.png"/>
						<mx:Spacer width="10"/>
					</mx:HBox>
				</mx:GridItem>
			</mx:GridRow>
			<mx:GridRow>
				<mx:GridItem>
					<s:Label width="100%" height="100%" text="Decimal Degrees" textAlign="right"
							 verticalAlign="middle"/>
				</mx:GridItem>
				<mx:GridItem>
					<s:TextInput id="txtDecDeg" width="300" height="100%" contentBackgroundColor="#E9E9E9"
								 editable="false"/>
				</mx:GridItem>
				<mx:GridItem>
					<s:Button id="btnCopyDecDeg" label="Copy" height="24" click="handleCopyDecDeg(event)" fontSize="14"/>
				</mx:GridItem>
			</mx:GridRow>
		</mx:Grid>
		<mx:HBox width="100%" horizontalAlign="center">
			<s:Button height="30" label="Export to VCARD" click="handleExportToVcard(event)"/>
			<s:Button height="30" label="GPX waypoints to VCARD" click="handleGpxToVcard(event)"/>
		</mx:HBox>
	</s:VGroup>
</s:Application>
